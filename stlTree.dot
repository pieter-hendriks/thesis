digraph stlTree {
	"Content_0"[label="Content"];
	"And_0"[label="And [0]"];
	"Content_0" -> "And_0";
	"And_1"[label="And [1]"];
	"And_0" -> "And_1";
	"Negation_0"[label="Negation [0]"];
	"And_1" -> "Negation_0";
	"Until_0"[label="Until [0]"];
	"Negation_0" -> "Until_0";
	"Negation_1"[label="Negation [1]"];
	"Until_0" -> "Negation_1";
	"QuantitativeSignal_0"[label="QuantitativeSignal [0]"];
	"Negation_1" -> "QuantitativeSignal_0";
	"BinaryOperation_0"[label="-"];
	"QuantitativeSignal_0" -> "BinaryOperation_0";
	"FloatValue_0"[label="2.4"];
	"BinaryOperation_0" -> "FloatValue_0";
	"Signal_0"[label="Signal: c"];
	"BinaryOperation_0" -> "Signal_0";
	"Negation_2"[label="Negation [2]"];
	"And_1" -> "Negation_2";
	"Until_1"[label="Until [1]"];
	"Negation_2" -> "Until_1";
	"Negation_3"[label="Negation [3]"];
	"Until_1" -> "Negation_3";
	"QuantitativeSignal_1"[label="QuantitativeSignal [1]"];
	"Negation_3" -> "QuantitativeSignal_1";
	"BinaryOperation_1"[label="+"];
	"QuantitativeSignal_1" -> "BinaryOperation_1";
	"FloatValue_1"[label="2.4"];
	"BinaryOperation_1" -> "FloatValue_1";
	"Signal_1"[label="Signal: c"];
	"BinaryOperation_1" -> "Signal_1";
	"And_2"[label="And [2]"];
	"And_0" -> "And_2";
	"Negation_4"[label="Negation [4]"];
	"And_2" -> "Negation_4";
	"Until_2"[label="Until [2]"];
	"Negation_4" -> "Until_2";
	"Negation_5"[label="Negation [5]"];
	"Until_2" -> "Negation_5";
	"QuantitativeSignal_2"[label="QuantitativeSignal [2]"];
	"Negation_5" -> "QuantitativeSignal_2";
	"BinaryOperation_2"[label="-"];
	"QuantitativeSignal_2" -> "BinaryOperation_2";
	"FloatValue_2"[label="0.209"];
	"BinaryOperation_2" -> "FloatValue_2";
	"Signal_2"[label="Signal: p"];
	"BinaryOperation_2" -> "Signal_2";
	"Negation_6"[label="Negation [6]"];
	"And_2" -> "Negation_6";
	"Until_3"[label="Until [3]"];
	"Negation_6" -> "Until_3";
	"Negation_7"[label="Negation [7]"];
	"Until_3" -> "Negation_7";
	"QuantitativeSignal_3"[label="QuantitativeSignal [3]"];
	"Negation_7" -> "QuantitativeSignal_3";
	"BinaryOperation_3"[label="+"];
	"QuantitativeSignal_3" -> "BinaryOperation_3";
	"FloatValue_3"[label="0.209"];
	"BinaryOperation_3" -> "FloatValue_3";
	"Signal_3"[label="Signal: p"];
	"BinaryOperation_3" -> "Signal_3";
}